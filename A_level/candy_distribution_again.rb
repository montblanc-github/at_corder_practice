N,x = gets.split.map(&:to_i)
# それぞれの子供が満足する個数が少ない順に並べ替えることで、少ない数でも満足させられる子供から配る処理が可能になる。
sweets = gets.split.map(&:to_i).sort
puts sweets

# もし満足する個数の合計がお菓子の合計と同じ時、全員が満足するため、Nをそのまま出力。
if sweets.sum == x
    puts N
else
# 満足する子供の数をkidsとする。
    kids = 0
# 満足する個数をそれぞれiとして、満足する子供の最大値を求める処理。
    sweets.each do |i|
        # もし、xがi以上の時(お菓子の総数が満足する個数より大きい場合)は、
        # 満足する個数が最小の子供にお菓子を配れるので、kidsを1増やす。
        # その後、配った分だけ、お菓子を減らす。
        if x >= i
            kids += 1
            x -= i
        else
            break
        end
    end
    # 満足した子供の数と、全体の子供の数から1引いた数のどちらか小さい方を出力。
    # こうすると、満足する個数より多く渡された子供は、多すぎるので満足できない条件に当てはまる。
    puts [kids, N-1].min
end